---
- name: Merge and Deduplicate APT Configurations
  when: apt_configuration_list | default([]) | length > 0
  block:
    - name: Merge Host-Specific APT Configurations
      ansible.builtin.set_fact:
        apt_configuration_list: "{{ apt_configuration_list | default([]) | union(apt_configuration_host_list | default([])) | unique }}"
      when: apt_configuration_host_list | default([]) | length > 0

    - name: Merge Group-Specific APT Configurations
      ansible.builtin.set_fact:
        apt_configuration_list: "{{ apt_configuration_list | union(apt_configuration_group_list | default([])) | unique }}"
      when: apt_configuration_group_list | default([]) | length > 0

  rescue:
    - name: Handle failure in merging APT configurations
      ansible.builtin.debug:
        msg: "Failed to merge APT configurations. Please review the provided lists for errors."

  always:
    - name: Log completion of APT configuration merge
      ansible.builtin.debug:
        msg: "Completed the merge and deduplication of APT configurations, regardless of outcome."

- name: Ensure APT configuration
  block:
    - name: Create and apply APT configuration files
      ansible.builtin.include_tasks: "configuration.yml"
      loop: "{{ apt_configuration_list }}"
      loop_control:
        label: "{{ item.filename }}"
      vars:
        apt_configuration_detail: "{{ item.config }}"
        apt_configuration_filename: "{{ item.filename }}"

  rescue:
    - name: Handle failure in applying APT configurations
      ansible.builtin.debug:
        msg: "Failed to apply APT configurations. Please check for errors and try again."

  always:
    - name: Log completion of APT configuration management
      ansible.builtin.debug:
        msg: "Completed APT configuration management block, regardless of outcome."
