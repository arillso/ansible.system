---

- name: Add OS specific variables
  ansible.builtin.include_vars: "{{ loop_vars }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "defaults.yml"
      paths:
        - "vars"
  loop_control:
    loop_var: loop_vars

- name: Modify iptables
  ansible.builtin.include_tasks: modify_iptables.yml
  vars:
    iptables_rule_action: "{{ iptables_rule.action | default(omit) }}"
    iptables_rule_chain: "{{ iptables_rule.chain | default(omit) }}"
    iptables_rule_comment: "{{ iptables_rule.comment | default(omit) }}"
    iptables_rule_ctstate: "{{ iptables_rule.ctstate | default(omit) }}"
    iptables_rule_destination: "{{ iptables_rule.destination | default(omit) }}"
    iptables_rule_destination_port: "{{ iptables_rule.destination_port | default(omit) }}"
    iptables_rule_destination_ports: "{{ iptables_rule.destination_ports | default(omit) }}"
    iptables_rule_dst_range: "{{ iptables_rule.dst_range | default(omit) }}"
    iptables_rule_flush: "{{ iptables_rule.flush | default(omit) }}"
    iptables_rule_fragment: "{{ iptables_rule.fragment | default(omit) }}"
    iptables_rule_gateway: "{{ iptables_rule.gateway | default(omit) }}"
    iptables_rule_gid_owner: "{{ iptables_rule.gid_owner | default(omit) }}"
    iptables_rule_goto: "{{ iptables_rule.goto | default(omit) }}"
    iptables_rule_icmp_type: "{{ iptables_rule.icmp_type | default(omit) }}"
    iptables_rule_in_interface: "{{ iptables_rule.in_interface | default(omit) }}"
    iptables_rule_ip_version: "{{ iptables_rule.ip_version | default(omit) }}"
    iptables_rule_jump: "{{ iptables_rule.jump | default(omit) }}"
    iptables_rule_limit: "{{ iptables_rule.limit | default(omit) }}"
    iptables_rule_limit_burst: "{{ iptables_rule.limit_burst | default(omit) }}"
    iptables_rule_log_level: "{{ iptables_rule.log_level | default(omit) }}"
    iptables_rule_log_prefix: "{{ iptables_rule.log_prefix | default(omit) }}"
    iptables_rule_match: "{{ iptables_rule.match | default(omit) }}"
    iptables_rule_match_set: "{{ iptables_rule.match_set | default(omit) }}"
    iptables_rule_match_set_flags: "{{ iptables_rule.match_set_flags | default(omit) }}"
    iptables_rule_out_interface: "{{ iptables_rule.out_interface | default(omit) }}"
    iptables_rule_policy: "{{ iptables_rule.policy | default(omit) }}"
    iptables_rule_protocol: "{{ iptables_rule.protocol | default(omit) }}"
    iptables_rule_reject_with: "{{ iptables_rule.reject_with | default(omit) }}"
    iptables_rule_rule_num: "{{ iptables_rule.rule_num | default(omit) }}"
    iptables_rule_set_counters: "{{ iptables_rule.set_counters | default(omit) }}"
    iptables_rule_set_dscp_mark: "{{ iptables_rule.set_dscp_mark | default(omit) }}"
    iptables_rule_set_dscp_mark_class: "{{ iptables_rule.set_dscp_mark_class | default(omit) }}"
    iptables_rule_source: "{{ iptables_rule.source | default(omit) }}"
    iptables_rule_source_port: "{{ iptables_rule.source_port | default(omit) }}"
    iptables_rule_src_range: "{{ iptables_rule.src_range | default(omit) }}"
    iptables_rule_state: "{{ iptables_rule.state | default(omit) }}"
    iptables_rule_syn: "{{ iptables_rule.syn | default(omit) }}"
    iptables_rule_table: "{{ iptables_rule.table | default(omit) }}"
    iptables_rule_tcp_flags: "{{ iptables_rule.tcp_flags | default(omit) }}"
    iptables_rule_flags: "{{ iptables_rule.flags | default(omit) }}"
    iptables_rule_flags_set: "{{ iptables_rule.flags_set | default(omit) }}"
    iptables_rule_to_destination: "{{ iptables_rule.to_destination | default(omit) }}"
    iptables_rule_to_ports: "{{ iptables_rule.to_ports | default(omit) }}"
    iptables_rule_to_source: "{{ iptables_rule.to_source | default(omit) }}"
    iptables_rule_uid_owner: "{{ iptables_rule.uid_owner | default(omit) }}"
    iptables_rule_wait: "{{ iptables_rule.wait | default(omit) }}"
  loop: "{{ iptables_rules }}"
  loop_control:
    label: "{{ iptables_rule_chain }}"
    loop_var: iptables_rule

- name: Install iptables
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
  with_items:
    - "{{ iptables_packages }}"
  notify:
    - Start iptables
    - Enable iptables
    - Start ip6tables
    - Enable ip6tables

- name: Save in File IPv4
  become: true
  community.general.iptables_state:
    ip_version: ipv4
    path: "{{ iptables_configuration }}"
    state: saved

- name: Save in File IPv6
  become: true
  community.general.iptables_state:
    ip_version: ipv6
    path: "{{ ip6tables_configuration }}"
    state: saved
