---
- name: "Linux : adding users"
  become: true
  no_log: true
  ansible.builtin.user:
    name: "{{ item.username }}"
    uid: "{{ item.uid | default(omit) }}"
    home: "{{ item.home | default(users_home ~ '/' ~ item.username) }}"
    comment: "{{ item.comment | default(omit) }}"
    system: "{{ item.system | default(omit) }}"
    generate_ssh_key: "{{ item.generate_ssh_key | default(omit) }}"
    group: "{{ omit if item.group is defined and item.group == item.username else (item.group if item.group is defined else omit) }}"
    groups: "{{ item.groups | default(users_groups) }}"
    append: "{{ item.append | default(omit) }}"
    password: "{{ item.password | default(omit) }}"
    ssh_key_file: ".ssh/id_{{ item.ssh_key_type | default(users_ssh_key_type) }}"
    ssh_key_passphrase: "{{ item.ssh_key_passphrase | default(omit) }}"
    ssh_key_bits: "{{ item.ssh_key_bits | default(users_ssh_key_bits) }}"
    create_home: "{{ item.create_home | default(omit) }}"
    shell: "{{ item.shell | default(omit) }}"
    update_password: "{{ item.update_password | default(omit) }}"
    expires: "{{ item.expires | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
    local: "{{ item.local | default(omit) }}"
    login_class: "{{ item.login_class | default(omit) }}"
    move_home: "{{ item.move_home | default(omit) }}"
    password_expire_account_disable: "{{ item.password_expire_account_disable | default(omit) }}"
    password_expire_max: "{{ item.password_expire_max | default(omit) }}"
    password_expire_min: "{{ item.password_expire_min | default(omit) }}"
    password_expire_warn: "{{ item.password_expire_warn | default(omit) }}"
    password_lock: "{{ item.password_lock | default(omit) }}"
    profile: "{{ item.profile | default(omit) }}"
    remove: "{{ item.remove | default(omit) }}"
    role: "{{ item.role | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    skeleton: "{{ item.skeleton | default(omit) }}"
    ssh_key_comment: "{{ item.ssh_key_comment | default(omit) }}"
    umask: "{{ item.umask | default(omit) }}"
    uid_min: "{{ item.uid_min | default(omit) }}"
    uid_max: "{{ item.uid_max | default(omit) }}"
  loop: "{{ users_list }}"
  loop_control:
    label: "{{ item.username }}"

- name: "Linux : setting users home permission"
  become: true
  no_log: true
  ansible.builtin.file:
    dest: "{{ item.home | default(users_home ~ '/' ~ item.username) }}"
    owner: "{{ item.username }}"
    group: "{{ item.group if item.group is defined else item.username }}"
    mode: "{{ item.home_mode if item.home_mode is defined else users_home_mode }}"
  loop: "{{ users_list }}"
  when: item.home_create | default(true)
  loop_control:
    label: "{{ item.username }}"

- name: "Linux : adding users .ssh directory"
  become: true
  no_log: true
  ansible.builtin.file:
    path: "{{ item.home | default(users_home ~ '/' ~ item.username) }}/.ssh"
    owner: "{{ item.username }}"
    group: "{{ item.group | default(item.username) }}"
    state: directory
    mode: "0700"
  loop: "{{ users_list }}"
  when: item.home_create | default(true)
  loop_control:
    label: "{{ item.username }}"

- name: "Linux : adding users authorized keys"
  become: true
  no_log: true
  ansible.posix.authorized_key:
    key: "{{ item.authorized_keys | join('\n') }}"
    user: "{{ item.username }}"
    exclusive: "{{ item.authorized_keys_exclusive | default(users_authorized_keys_exclusive) }}"
  loop: "{{ users_list }}"
  when: item.home_create | default(true) and item.authorized_keys | default(false)
  loop_control:
    label: "{{ item.username }}"
